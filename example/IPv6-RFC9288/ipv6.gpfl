PROLOGUE
	INIT
		set(discard, "reject")
		set(nbPacket, 0)
		// Limit rate to 5 packet by hour for hop by hop header
		newInterrupt(3600, true,
			cond(read(48, 8) == 0x0 & nbPacket > 5,
				drop
			)
			set(nbPacket, 0)
		)

// Filtering policy based on the recommendation of [RFC9288](https://datatracker.ietf.org/doc/rfc9288/)
// IPv6 Header: [RFC8200](https://www.rfc-editor.org/rfc/rfc8200)
//  0                   1                   2                   3
//  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
// |Version| Traffic Class |              Flow Label               | 32
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
// |          Payload Length       |  Next Header  |   Hop Limit   | 64
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
// |                                                               | 96
// +                                                               + 
// |                                                               | 128
// +                        Source Address                         + 
// |                                                               | 160
// +                                                               + 
// |                                                               | 192
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
// |                                                               | 224
// +                                                               + 
// |                                                               | 256
// +                      Destination Address                      + 
// |                                                               | 288
// +                                                               + 
// |                                                               | 320
// +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
// It is followed by the extension header that might contains options

FILTER
	set(nbPacket, nbPacket+1)
	set(nextHeader, read(48, 8))
	cond(read(0, 4) == 6,
		set(ehStart, 320)
		set(optDataLen, 0)
		cond(nextHeader == 0x0,
			set(optionType, read(ehStart+optDataLen+16, 8))
			// Pad1 | PadN | Tunnel Encapsulation Limit | Home Adress | ILNP Nonce
			cond(optionType == 0x00 | optionType == 0x01 | optionType == 0x04 | optionType == 0xc9 | optionType == 0x01 | optionType == 0x8b,
				accept
			)
			// Jumbo Payload | RPL Option | Endpoint Identification | Line Identification Option | Deprecated 
			// | RFC3962 Experiment
			cond(optionType == 0xc2 | optionType == 0x23 | optionType == 0x63 | optionType == 0x8a | optionType == 0x8c | optionType == 0x4d 
				| optionType == 0x1e | optionType == 0x3e | optionType == 0x5e | optionType == 0x7e | optionType == 0x9e | optionType == 0xbe | optionType == 0xde | optionType == 0xfe,
				drop
			)
		)
			
		// Destination Opts
		cond(nextHeader == 0x3c,
			set(optionType, read(ehStart+optDataLen+16, 8))
			// Endpoint Identification | Line Identification Option | RFC3962 Experiment
			cond(optionType == 0x8a | optionType == 0x8c
				| optionType == 0x1e | optionType == 0x3e | optionType == 0x5e | optionType == 0x7e | optionType == 0x9e | optionType == 0xbe | optionType == 0xde | optionType == 0xfe,
				drop
			)
		)
		
		// Routing
		cond(nextHeader == 0x2b,
			set(type, read(ehStart+16, 8))
			cond(type == 0b0 | type == 0b1,
				drop
			)
			accept
		)
			
		// Fragment | Encapsuling Security Payload | Authentification Header | Mobility Header | Host Identity Protocol 
		// | Shim 6 Protocol
		cond(nextHeader == 0x2c | nextHeader == 0x32 | nextHeader == 0x33 | nextHeader == 0x87 | nextHeader == 0x8b
			| nextHeader == 0x8c,
			accept
		)
			
		// Experimentation and testing
		// Unkown EH
		cond(nextHeader == 253 | nextHeader == 254 |
			nextHeader == 0 | nextHeader == 43 | nextHeader == 44 | nextHeader == 50 | nextHeader == 51 
			| nextHeader == 60 | nextHeader == 135 | nextHeader == 139 | nextHeader == 140,
			set(nextHeader, read(ehStart, 8))
			drop
		)
		drop
	)
	
	alarm("Not an IPv6 packet")
	drop
	
	
	